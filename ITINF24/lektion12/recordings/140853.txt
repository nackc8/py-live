Script started on 2025-03-13 14:08:53+01:00 [TERM="xterm-256color" TTY="/dev/pts/5" COLUMNS="92" LINES="17"]
[?2004h[94mITINF24/lektion12
(B[m$ 
[?2004l[?2004h[94mITINF24/lektion12
(B[m$ [H[2J[94mITINF24/lektion12
(B[m$ pip list
[?2004lPackage            Version
------------------ ------------
agate              1.6.3
agate-dbf          0.2.2
agate-excel        0.2.5
agate-sql          0.5.8
ansible            7.7.0
ansible-compat     3.0.1
ansible-core       2.14.18
ansible-lint       6.13.1
anyio              3.6.2
apache-libcloud    3.4.1
argcomplete        2.0.0
attrs              22.2.0
Babel              2.10.3
beautifulsoup4     4.11.2
black              23.1.0
blinker            1.5
bracex             2.2.1
Brlapi             0.8.4
certifi            2022.9.24
chardet            5.1.0
charset-normalizer 3.0.1
click              8.1.3
colorama           0.4.6
cryptography       38.0.4
cssselect          1.2.0
csvkit             1.0.7
cupshelpers        1.0
dbfread            2.0.7
dbus-python        1.3.2
deprecation        2.0.7
distro             1.8.0
distro-info        1.5+deb12u1
dnspython          2.3.0
enrich             1.2.7
et-xmlfile         1.0.1
filelock           3.9.0
ghp-import         2.1.0
gpg                1.18.0
greenlet           2.0.2
h11                0.14.0
h2                 4.1.0
hpack              4.0.0
html5lib           1.1
httpcore           0.16.3
httplib2           0.20.4
httpx              0.23.3
hyperframe         6.0.0
idna               3.3
img2pdf            0.4.4
iniconfig          1.1.1
iotop              0.6
isodate            0.6.1
jdcal              1.0
Jinja2             3.1.2
jmespath           1.0.1
joblib             1.2.0
jsonpointer        2.3
jsonschema         4.10.3
lazr.restfulclient 0.14.5
lazr.uri           1.0.6
leather            0.3.4
libevdev           0.5
libvirt-python     9.0.0
livereload         2.6.3
lockfile           0.12.2
louis              3.24.0
lunr               0.6.2
lxml               4.9.2
Mako               1.2.4.dev0
Markdown           3.4.1
markdown-it-py     2.1.0
MarkupSafe         2.1.2
mdurl              0.1.2
mergedeep          1.3.4
mkdocs             1.4.2
more-itertools     8.10.0
mypy-extensions    0.4.3
netaddr            0.8.0
nltk               3.8
ntlm-auth          1.4.0
numpy              1.24.2
oauthlib           3.2.2
olefile            0.46
openpyxl           3.0.9
packaging          23.0
parsedatetime      2.6
passlib            1.7.4
pathspec           0.11.0
pbr                5.10.0
pikepdf            6.0.0+dfsg
Pillow             9.4.0
pip                23.0.1
pipx               1.1.0
platformdirs       2.6.0
pluggy             1.0.0+repack
psutil             5.9.4
py                 1.11.0
pycairo            1.20.1
pycups             2.0.1
pycurl             7.45.2
Pygments           2.14.0
PyGObject          3.42.2
PyICU              2.10.2
pyinotify          0.9.6
PyJWT              2.6.0
pykerberos         1.1.14
pylibacl           0.7.0
pyOpenSSL          23.0.0
pyparsing          3.0.9
PyQt5              5.15.9
PyQt5-sip          12.11.1
pyrsistent         0.18.1
PySimpleSOAP       1.16.2
pysmbc             1.0.23
pytest             7.2.1
python-apt         2.6.0
python-dateutil    2.8.2
python-debian      0.1.49
python-debianbts   4.0.1
python-slugify     4.0.0
pytimeparse        1.1.5
pytz               2022.7.1
pyudev             0.24.0
pywinrm            0.3.0
pyxattr            0.8.1
pyxdg              0.28
PyYAML             6.0
pyyaml_env_tag     0.1
regex              2022.10.31
reportbug          12.0.0
requests           2.28.1
requests-kerberos  0.12.0
requests-ntlm      1.1.0
requests-toolbelt  0.10.1
resolvelib         0.9.0
rfc3986            1.5.0
rfc3987            1.3.8
rich               13.3.1
ruamel.yaml        0.17.21
ruamel.yaml.clib   0.2.7
scour              0.38.2
selinux            3.4
setuptools         66.1.1
simplejson         3.18.3
six                1.16.0
sniffio            1.2.0
soupsieve          2.3.2
SQLAlchemy         1.4.46
subprocess-tee     0.4.1
tenacity           8.2.1
tornado            6.2
tqdm               4.64.1
Unidecode          1.3.6
uritemplate        4.1.1
urllib3            1.26.12
userpath           1.8.0
vboxapi            1.0
wadllib            1.3.6
watchdog           2.2.1
wcmatch            8.4
webcolors          1.11.1
webencodings       0.5.1
wheel              0.38.4
xdg                5
xlrd               1.2.0
xmltodict          0.13.0
yamllint           1.29.0
[?2004h[94mITINF24/lektion12
(B[m$ [H[2J[94mITINF24/lektion12
(B[m$ ls
[?2004ldoctests  ex_import_vs_script  pip.md  recordings  syspath  TDD.md  unittest  virtual_env
[?2004h[94mITINF24/lektion12
(B[m$ cd virtual_env/
[?2004l[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ [H[2J[94mITINF24/lektion12/virtual_env
(B[m$ ls
[?2004lrequirements.txt
[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ ls -a[H[2J[94mITINF24/lektion12/virtual_env
(B[m$ ls -a
[?2004l.  ..  requirements.txt
[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ python3 -m venv .venv
[?2004l[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ pip list
[?2004lPackage            Version
------------------ ------------
agate              1.6.3
agate-dbf          0.2.2
agate-excel        0.2.5
agate-sql          0.5.8
ansible            7.7.0
ansible-compat     3.0.1
ansible-core       2.14.18
ansible-lint       6.13.1
anyio              3.6.2
apache-libcloud    3.4.1
argcomplete        2.0.0
attrs              22.2.0
Babel              2.10.3
beautifulsoup4     4.11.2
black              23.1.0
blinker            1.5
bracex             2.2.1
Brlapi             0.8.4
certifi            2022.9.24
chardet            5.1.0
charset-normalizer 3.0.1
click              8.1.3
colorama           0.4.6
cryptography       38.0.4
cssselect          1.2.0
csvkit             1.0.7
cupshelpers        1.0
dbfread            2.0.7
dbus-python        1.3.2
deprecation        2.0.7
distro             1.8.0
distro-info        1.5+deb12u1
dnspython          2.3.0
enrich             1.2.7
et-xmlfile         1.0.1
filelock           3.9.0
ghp-import         2.1.0
gpg                1.18.0
greenlet           2.0.2
h11                0.14.0
h2                 4.1.0
hpack              4.0.0
html5lib           1.1
httpcore           0.16.3
httplib2           0.20.4
httpx              0.23.3
hyperframe         6.0.0
idna               3.3
img2pdf            0.4.4
iniconfig          1.1.1
iotop              0.6
isodate            0.6.1
jdcal              1.0
Jinja2             3.1.2
jmespath           1.0.1
joblib             1.2.0
jsonpointer        2.3
jsonschema         4.10.3
lazr.restfulclient 0.14.5
lazr.uri           1.0.6
leather            0.3.4
libevdev           0.5
libvirt-python     9.0.0
livereload         2.6.3
lockfile           0.12.2
louis              3.24.0
lunr               0.6.2
lxml               4.9.2
Mako               1.2.4.dev0
Markdown           3.4.1
markdown-it-py     2.1.0
MarkupSafe         2.1.2
mdurl              0.1.2
mergedeep          1.3.4
mkdocs             1.4.2
more-itertools     8.10.0
mypy-extensions    0.4.3
netaddr            0.8.0
nltk               3.8
ntlm-auth          1.4.0
numpy              1.24.2
oauthlib           3.2.2
olefile            0.46
openpyxl           3.0.9
packaging          23.0
parsedatetime      2.6
passlib            1.7.4
pathspec           0.11.0
pbr                5.10.0
pikepdf            6.0.0+dfsg
Pillow             9.4.0
pip                23.0.1
pipx               1.1.0
platformdirs       2.6.0
pluggy             1.0.0+repack
psutil             5.9.4
py                 1.11.0
pycairo            1.20.1
pycups             2.0.1
pycurl             7.45.2
Pygments           2.14.0
PyGObject          3.42.2
PyICU              2.10.2
pyinotify          0.9.6
PyJWT              2.6.0
pykerberos         1.1.14
pylibacl           0.7.0
pyOpenSSL          23.0.0
pyparsing          3.0.9
PyQt5              5.15.9
PyQt5-sip          12.11.1
pyrsistent         0.18.1
PySimpleSOAP       1.16.2
pysmbc             1.0.23
pytest             7.2.1
python-apt         2.6.0
python-dateutil    2.8.2
python-debian      0.1.49
python-debianbts   4.0.1
python-slugify     4.0.0
pytimeparse        1.1.5
pytz               2022.7.1
pyudev             0.24.0
pywinrm            0.3.0
pyxattr            0.8.1
pyxdg              0.28
PyYAML             6.0
pyyaml_env_tag     0.1
regex              2022.10.31
reportbug          12.0.0
requests           2.28.1
requests-kerberos  0.12.0
requests-ntlm      1.1.0
requests-toolbelt  0.10.1
resolvelib         0.9.0
rfc3986            1.5.0
rfc3987            1.3.8
rich               13.3.1
ruamel.yaml        0.17.21
ruamel.yaml.clib   0.2.7
scour              0.38.2
selinux            3.4
setuptools         66.1.1
simplejson         3.18.3
six                1.16.0
sniffio            1.2.0
soupsieve          2.3.2
SQLAlchemy         1.4.46
subprocess-tee     0.4.1
tenacity           8.2.1
tornado            6.2
tqdm               4.64.1
Unidecode          1.3.6
uritemplate        4.1.1
urllib3            1.26.12
userpath           1.8.0
vboxapi            1.0
wadllib            1.3.6
watchdog           2.2.1
wcmatch            8.4
webcolors          1.11.1
webencodings       0.5.1
wheel              0.38.4
xdg                5
xlrd               1.2.0
xmltodict          0.13.0
yamllint           1.29.0
[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ [H[2J[94mITINF24/lektion12/virtual_env
(B[m$ source .venv/a[Kbin/activate[1P/activate[1P/activate[1P/activateS/activatec/activater/activatei/activatep/activatet/activate[C[C[C[C[C[C[C[C[Cst/activate[1Pt/activate[Cs/activate[1P/activate[C[C[C[C[C[C[C[C[C.ps1[K[K[K[K[1P/activate[1P/activate[1P/activate[1P/activate[1P/activate[1P/activateb/activatei/activaten/activate[C
[?2004l[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ pip list[H[2J[94mITINF24/lektion12/virtual_env
(B[m$ pip list
[?2004lPackage    Version
---------- -------
pip        23.0.1
setuptools 66.1.1
[?2004h[94mITINF24/lektion12/virtual_env
(B[m$ [H[2J[94mITINF24/lektion12/virtual_env
(B[m$ pip --[K[Kinstall --help
[?2004l
Usage:   
  pip install [options] <requirement specifier> [package-index-options] ...
  pip install [options] -r <requirements file> [package-index-options] ...
  pip install [options] [-e] <vcs project url> ...
  pip install [options] [-e] <local project path> ...
  pip install [options] <archive url/path> ...

Description:
  Install packages from:
  
  - PyPI (and other indexes) using requirement specifiers.
  - VCS project urls.
  - Local project directories.
  - Local or remote source archives.
  
  pip also supports installing from "requirements files", which provide
  an easy way to specify a whole environment to be installed.

Install Options:
  -r, --requirement <file>    Install from the given requirements file. This option can be
                              used multiple times.
  -c, --constraint <file>     Constrain versions using the given constraints file. This
                              option can be used multiple times.
  --no-deps                   Don't install package dependencies.
  --pre                       Include pre-release and development versions. By default,
                              pip only finds stable versions.
  -e, --editable <path/url>   Install a project in editable mode (i.e. setuptools "develop
                              mode") from a local project path or a VCS url.
  --dry-run                   Don't actually install anything, just print what would be.
                              Can be used in combination with --ignore-installed to
                              'resolve' the requirements.
  -t, --target <dir>          Install packages into <dir>. By default this will not
                              replace existing files/folders in <dir>. Use --upgrade to
                              replace existing packages in <dir> with new versions.
  --platform <platform>       Only use wheels compatible with <platform>. Defaults to the
                              platform of the running system. Use this option multiple
                              times to specify multiple platforms supported by the target
                              interpreter.
  --python-version <python_version>
                              The Python interpreter version to use for wheel and
                              "Requires-Python" compatibility checks. Defaults to a
                              version derived from the running interpreter. The version
                              can be specified using up to three dot-separated integers
                              (e.g. "3" for 3.0.0, "3.7" for 3.7.0, or "3.7.3"). A major-
                              minor version can also be given as a string without dots
                              (e.g. "37" for 3.7.0).
  --implementation <implementation>
                              Only use wheels compatible with Python implementation
                              <implementation>, e.g. 'pp', 'jy', 'cp',  or 'ip'. If not
                              specified, then the current interpreter implementation is
                              used.  Use 'py' to force implementation-agnostic wheels.
  --abi <abi>                 Only use wheels compatible with Python abi <abi>, e.g.
                              'pypy_41'. If not specified, then the current interpreter
                              abi tag is used. Use this option multiple times to specify
                              multiple abis supported by the target interpreter. Generally
                              you will need to specify --implementation, --platform, and
                              --python-version when using this option.
  --user                      Install to the Python user install directory for your
                              platform. Typically ~/.local/, or %APPDATA%\Python on
                              Windows. (See the Python documentation for site.USER_BASE
                              for full details.)
  --root <dir>                Install everything relative to this alternate root
                              directory.
  --prefix <dir>              Installation prefix where lib, bin and other top-level
                              folders are placed
  --src <dir>                 Directory to check out editable projects into. The default
                              in a virtualenv is "<venv path>/src". The default for global
                              installs is "<current dir>/src".
  -U, --upgrade               Upgrade all specified packages to the newest available
                              version. The handling of dependencies depends on the
                              upgrade-strategy used.
  --upgrade-strategy <upgrade_strategy>
                              Determines how dependency upgrading should be handled
                              [default: only-if-needed]. "eager" - dependencies are
                              upgraded regardless of whether the currently installed
                              version satisfies the requirements of the upgraded
                              package(s). "only-if-needed" -  are upgraded only when they
                              do not satisfy the requirements of the upgraded package(s).
  --force-reinstall           Reinstall all packages even if they are already up-to-date.
  -I, --ignore-installed      Ignore the installed packages, overwriting them. This can
                              break your system if the existing package is of a different
                              version or was installed with a different package manager!
  --ignore-requires-python    Ignore the Requires-Python information.
  --no-build-isolation        Disable isolation when building a modern source
                              distribution. Build dependencies specified by PEP 518 must
                              be already installed if this option is used.
  --use-pep517                Use PEP 517 for building source distributions (use --no-use-
                              pep517 to force legacy behaviour).
  --check-build-dependencies  Check the build dependencies when PEP517 is used.
  --break-system-packages     Allow pip to modify an EXTERNALLY-MANAGED Python
                              installation
  --config-settings <settings>
                              Configuration settings to be passed to the PEP 517 build
                              backend. Settings take the form KEY=VALUE. Use multiple
                              --config-settings options to pass multiple keys to the
                              backend.
  --install-option <options>  This option is deprecated. Using this option with location-
                              changing options may cause unexpected behavior. Use pip-
                              level options like --user, --prefix, --root, and --target.
  --global-option <options>   Extra global options to be supplied to the setup.py call
                              before the install or bdist_wheel command.
  --compile                   Compile Python source files to bytecode
  --no-compile                Do not compile Python source files to bytecode
  --no-warn-script-location   Do not warn when installing scripts outside PATH
  --no-warn-conflicts         Do not warn about broken dependencies
  --no-binary <format_control>
                              Do not use binary packages. Can be supplied multiple times,
                              and each time adds to the existing value. Accepts either
                              ":all:" to disable all binary packages, ":none:" to empty
                              the set (notice the colons), or one or more package names
                              with commas between them (no colons). Note that some
                              packages are tricky to compile and may fail to install when
                              this option is used on them.
  --only-binary <format_control>
                              Do not use source packages. Can be supplied multiple times,
                              and each time adds to the existing value. Accepts either
                              ":all:" to disable all source packages, ":none:" to empty
                              the set, or one or more package names with commas between
                              them. Packages without binary distributions will fail to
                              install when this option is used on them.
  --prefer-binary             Prefer older binary packages over newer source packages.
  --require-hashes            Require a hash to check each requirement against, for
                              repeatable installs. This option is implied when any package
                              in a requirements file has a --hash option.
  --progress-bar <progress_bar>
                              Specify whether the progress bar should be used [on, off]
                              (default: on)
  --root-user-action <root_user_action>
                              Action if pip is run as a root user. By default, a warning
                              message is shown.
  --report <file>             Generate a JSON file describing what pip did to install the
                              provided requirements. Can be used in combination with
                              --dry-run and --ignore-installed to 'resolve' the
                              requirements. When - is used as file name it writes to
                              stdout. When writing to stdout, please combine with the
                              --quiet option to avoid mixing pip logging output with JSON
                              output.
  --no-clean                  Don't clean up build directories.

Package Index Options:
  -i, --index-url <url>       Base URL of the Python Package Index (default
                              https://pypi.org/simple). This should point to a repository
                              compliant with PEP 503 (the simple repository API) or a
                              local directory laid out in the same format.
  --extra-index-url <url>     Extra URLs of package indexes to use in addition to --index-
                              url. Should follow the same rules as --index-url.
  --no-index                  Ignore package index (only looking at --find-links URLs
                              instead).
  -f, --find-links <url>      If a URL or path to an html file, then parse for links to
                              archives such as sdist (.tar.gz) or wheel (.whl) files. If a
                              local path or file:// URL that's a directory, then look for
                              archives in the directory listing. Links to VCS project URLs
                              are not supported.

General Options:
  -h, --help                  Show help.
  --debug                     Let unhandled exceptions propagate outside the main
                              subroutine, instead of logging them to stderr.
  --isolated                  Run pip in an isolated mode, ignoring environment variables
                              and user configuration.
  --require-virtualenv        Allow pip to only run in a virtual environment; exit with an
                              error otherwise.
  --python <python>           Run pip with the specified Python interpreter.
  -v, --verbose               Give more output. Option is additive, and can be used up to
                              3 times.
  -V, --version               Show version and exit.
  -q, --quiet                 Give less output. Option is additive, and can be used up to
                              3 times (corresponding to WARNING, ERROR, and CRITICAL
                              logging levels).
  --log <path>                Path to a verbose appending log.
  --no-input                  Disable prompting for input.
  --proxy <proxy>             Specify a proxy in the form
                              scheme://[user:passwd@]proxy.server:port.
  --retries <retries>         Maximum number of retries each connection should attempt
                              (default 5 times).
  --timeout <sec>             Set the socket timeout (default 15 seconds).
  --exists-action <action>    Default action when a path already exists: (s)witch,
                              (i)gnore, (w)ipe, (b)ackup, (a)bort.
  --trusted-host <hostname>   Mark this host or host:port pair as trusted, even though it
                              does not have valid or any HTTPS.
  --cert <path>               Path to PEM-encoded CA certificate bundle. If provided,
                              overrides the default. See 'SSL Certificate Verification' in
                              pip documentation for more information.
  --client-cert <path>        Path to SSL client certificate, a single file containing the
                              private key and the certificate in PEM format.
  --cache-dir <dir>           Store the cache data in <dir>.
  --no-cache-dir              Disable the cache.
  --disable-pip-version-check
                              Don't periodically check PyPI to determine whether a new
                              version of pip is available for download. Implied with --no-
                              index.
  --